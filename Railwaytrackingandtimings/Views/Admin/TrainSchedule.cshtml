@model Railwaytrackingandtimings.Models.TrainStationDetailsmodel

@using GridMvc.Html

@{
    ViewBag.Title = "TrainSchedule";
    Layout = "~/Views/Shared/_LayoutPageAdmin.cshtml";
}


<div class="form-horizontal">
    <br/>
    <h3 style="color:green;">Train Schedule</h3>

    <div class="col-xs-12 col-sm-4">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @*@Model= new Railwaytrackingandtimings.TemptblStationTrainDetail();*@


            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Train No", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.TemptblStationTrainDetail.TrainId, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.TrainId,id="txtTrainid" } })
                    @Html.ValidationMessageFor(model => model.TemptblStationTrainDetail.TrainId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Station", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.TemptblStationTrainDetail.StationCode, new SelectList(ViewBag.stations, "StationCode", "StationName"),"--Select--", htmlAttributes: new { @class = "form-control" ,id = "ddlstation"})
                    @Html.ValidationMessageFor(model => model.TemptblStationTrainDetail.StationCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Date", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    <div class="input-group date" data-date-format="yyyy-mm-dd">
                        @Html.EditorFor(model => model.TemptblStationTrainDetail.SchduleDate, new { htmlAttributes = new { @class = "form-control", placeholder = "YYYY-MM-DD",id="txtdate" } })
                        @Html.ValidationMessageFor(model => model.TemptblStationTrainDetail.SchduleDate, "", new { @class = "text-danger" })
                        @*<input type="text" class="form-control" placeholder="dd.mm.yyyy">*@
                        <div class="input-group-addon">
                            <span class="glyphicon glyphicon-th"></span>
                        </div>
                    </div>
                    
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Arrival Time", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.TemptblStationTrainDetail.ArrivalTime, new { htmlAttributes = new { @class = "form-control", placeholder = "HH:MM", id = "txtATime" } })
                    @Html.ValidationMessageFor(model => model.TemptblStationTrainDetail.ArrivalTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Depature Time", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.TemptblStationTrainDetail.DepatureTime, new { htmlAttributes = new { @class = "form-control", placeholder = "HH:MM", id = "txtDTime" } })
                    @Html.ValidationMessageFor(model => model.TemptblStationTrainDetail.DepatureTime, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.StationName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StationName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StationName, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit"  id="btnAdd" value="ADD" class="btn btn-default" />
                </div>
            </div>
        }
    </div>
    <br />
    <div class="col-xs-12 col-sm-8" style="box-shadow: 0px 0px 5px 2px; background-color: azure;">
        @using (Html.BeginForm("SavetrainStation", "Admin"))
        {
            <div>
                <h4 style="color:green">Stations Details</h4>

                @Html.Grid(Model.TemptblStationTrainDetaillist).Columns(columns =>
       {
           columns.Add(c => c.StationCode).Titled("Station Code").Filterable(false);
           columns.Add(c => c.StationName).Titled("Station Name").Filterable(false);
           columns.Add(c => c.ArrivalTime).Titled("Arrival Time").Filterable(false);
           columns.Add(c => c.DepatureTime).Titled("Depature Time").Filterable(false);
           columns.Add(c => c.SchduleDate).Titled("Schdule Date").Filterable(false);


       }).WithPaging(10).Sortable(true)
            </div>
            <br />
            <div class="form-group">
                @Html.Label("Delay", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextBox("Delayeditor", "", new { htmlAttributes = new { @class = "form-control", placeholder = "MM" } })
                    @Html.Hidden("hdntrianid", (object)ViewBag.TrainId)
                    
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        }
    </div>

</div>


@*<div>
    @Html.ActionLink("Back to Train List", "Index")
</div>*@
@section scripts{
      <script type="text/javascript">
          $(function () {
              alert(new Date());
              $('.input-group.date').datepicker({ format: "yyyy-mm-dd", startDate: new Date() });
          });
          $('#btnAdd').click(function () {
              if ($("#txtTrainid").val() == '') {
                  alert("Train No should not be blank");
                  return false;
              }
              if ($("#ddlstation").val() == '') {
                 alert("Please select Station");
                  return false;
              }
              if ($("#txtdate").val() == '') {
                  alert("Please provide the schedule date");
                  return false;
              }
              
              var sdate = /^\d{4}-((0\d)|(1[012]))-(([012]\d)|3[01])$/;
              if (!$("#txtdate").val().match(sdate)) {
                 alert("Schedule date should be in yyyy-mm-dd format");
                  return false;
              }
              if ($("#txtATime").val() == '') {
                  alert("Arrival Time should not be blank");
                  return false;
              }
              var atime = /^([01]?[0-9]|2[0-3])(:[0-5][0-9]){2}$/;
              if (!$("#txtATime").val().match(atime))  {
                  alert("Invalid Arrival Time");
                  return false;
              }
              if ($("#txtDTime").val() == '') {
                  alert("Depature Time should not be blank");
                  return false;
              }
              if (!$("#txtDTime").val().match(atime)) {
                  alert("Invalid Depature Time");
                  return false;
              }    
              
              return true;
          });
          //$('.input-group.date').datepicker({  minDate: new Date() }); 
    </script>

        }
